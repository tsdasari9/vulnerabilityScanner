package main

import (
	"encoding/json"
	"io/ioutil"
)

// Vulnerability represents a single vulnerability entry
type Vulnerability struct {
	Service string   `json:"service"`
	Version string   `json:"version"`
	CVEs    []string `json:"cves"`
}

// Load vulnerabilities from a JSON file
func loadVulnerabilityDatabase(filename string) ([]Vulnerability, error) {
	data, err := ioutil.ReadFile(filename)
	if err != nil {
		return nil, err
	}

	var vulnerabilities []Vulnerability
	err = json.Unmarshal(data, &vulnerabilities)
	if err != nil {
		return nil, err
	}

	return vulnerabilities, nil
}

// Match detected services with known vulnerabilities
func matchVulnerabilities(service string, vulnerabilities []Vulnerability) []string {
	for _, v := range vulnerabilities {
		if v.Service == service {
			return v.CVEs
		}
	}
	return nil
}
